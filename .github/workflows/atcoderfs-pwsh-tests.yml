name: Test PowerShell on Ubuntu
on: push

jobs:
  pester-test:
    name: Pester test
    runs-on: ubuntu-18.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup PowerShell module cache
        id: cacher
        uses: actions/cache@v2
        with:
          path: "~/.local/share/powershell/Modules"
          key: ${{ runner.os }}-AngleParse-PSScriptAnalyzer
      - name: Install required PowerShell modules
        if: steps.cacher.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module AngleParse, PSScriptAnalyzer -ErrorAction Stop
      - name: Lint with PSScriptAnalyzer
        shell: pwsh
        run: |
          Invoke-ScriptAnalyzer -Path src/AtcoderFs.Pwsh  -Recurse -Outvariable issues
          $errors   = $issues.Where({$_.Severity -eq 'Error'})
          $warnings = $issues.Where({$_.Severity -eq 'Warning'})
          if ($errors) {
              Write-Error "There were $($errors.Count) errors and $($warnings.Count) warnings total." -ErrorAction Stop
          } else {
              Write-Output "There were $($errors.Count) errors and $($warnings.Count) warnings total."
          }
      - name: Perform a Pester test from the AtcoderFs.Pwsh.Tests.ps1 file
        shell: pwsh
        run: |
          $config = New-PesterConfiguration
          $config.Run.Path = "tests/AtcoderFs.Pwsh.Tests"
          $config.TestResult.Enabled = $true
          $config.TestResult.OutputPath = "AtcoderFs.Pwsh.Tests.xml"
          Invoke-Pester -Configuration $config
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-Unit-Tests
          path: AtcoderFs.Pwsh.Tests.xml
    if: ${{ always() }}